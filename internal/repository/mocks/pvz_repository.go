// Code generated by MockGen. DO NOT EDIT.
// Source: ./pvz_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	db "github.com/myacey/avito-backend-assignment-pvz/internal/repository/sqlc"
)

// MockPvzQueries is a mock of PvzQueries interface.
type MockPvzQueries struct {
	ctrl     *gomock.Controller
	recorder *MockPvzQueriesMockRecorder
}

// MockPvzQueriesMockRecorder is the mock recorder for MockPvzQueries.
type MockPvzQueriesMockRecorder struct {
	mock *MockPvzQueries
}

// NewMockPvzQueries creates a new mock instance.
func NewMockPvzQueries(ctrl *gomock.Controller) *MockPvzQueries {
	mock := &MockPvzQueries{ctrl: ctrl}
	mock.recorder = &MockPvzQueriesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPvzQueries) EXPECT() *MockPvzQueriesMockRecorder {
	return m.recorder
}

// CreatePVZ mocks base method.
func (m *MockPvzQueries) CreatePVZ(ctx context.Context, arg db.CreatePVZParams) (db.Pvz, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePVZ", ctx, arg)
	ret0, _ := ret[0].(db.Pvz)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePVZ indicates an expected call of CreatePVZ.
func (mr *MockPvzQueriesMockRecorder) CreatePVZ(ctx, arg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePVZ", reflect.TypeOf((*MockPvzQueries)(nil).CreatePVZ), ctx, arg)
}

// SearchPVZ mocks base method.
func (m *MockPvzQueries) SearchPVZ(ctx context.Context, arg db.SearchPVZParams) ([]db.Pvz, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchPVZ", ctx, arg)
	ret0, _ := ret[0].([]db.Pvz)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchPVZ indicates an expected call of SearchPVZ.
func (mr *MockPvzQueriesMockRecorder) SearchPVZ(ctx, arg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchPVZ", reflect.TypeOf((*MockPvzQueries)(nil).SearchPVZ), ctx, arg)
}
